## Here is an example for Python.
##
syntax "python" "(\.py|_py\.txt)$"
icolor brightblue "def [0-9A-Z_]+"
color brightcyan "\<(and|as|assert|break|class|continue|def|del|elif|else|except|exec|finally|for|from|global|if|import|in|is|lambda|map|not|or|pass|print|raise|return|try|while|with|yield)\>"
color brightyellow "\<(True|False|None|(Attribute|Index|IO|Key|Name|NotImplemented|OS|Overflow|Runtime|Type|Value|ZeroDivision|AllInOne)Error)\>"

#http://fahhem.com/blog/2010/09/nanorc-for-python/

color brightgreen "['][^']*[^\\]?[']" "[']{3}.*[^\\][']{3}"
color brightgreen "["][^"]*[^\\]?["]" "["]{3}.*[^\\]["]{3}"
color brightgreen """".*""""

## Triple-quotes
#color brightgreen start=""""[^"]?" end=""""" start="'''[^']?" end="'''"
#color brightgreen start=""""$" end=""""$" start="'''$" end="'''$"

## normal comments with no quotes
color brightred "#[^'"]*$"
## possibly normal, has some quotes but will check for double later
color brightred "#[^'"]*"
## these are no-doubt valid
color brightred "^\s*#.*"

## for strings with # in it (overriding possibly normal comments from earlier
color brightgreen "['][^']*#[^']*[^\\]?[']" "[']{3}.*[^\\][']{3}"
color brightgreen "["][^"]*#[^"]*[^\\]?["]" "["]{3}.*[^\\]["]{3}"

## for comments with an even number of quotes
color brightred "#([^'"]*['"][^'"]*['"])+[^'"]*$"
